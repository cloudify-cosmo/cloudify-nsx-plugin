tosca_definitions_version: cloudify_dsl_1_3

description: >
  This Blueprint installs VM via vsphere-plugin and create and set security tag
  via NSX plugin on an vsphere environment.

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-vsphere-plugin/2.3.0/plugin.yaml
  - ../../../plugin.yaml

inputs:

# NSX plugin inputs
  nsx_ip:
    type: string
    description: >
       nsx server ip

  nsx_user:
    type: string
    description: >
       nsx server user

  nsx_password:
    type: string
    description: >
       nsx server user password

  nsx_raml:
    type: string
    description: >
       raml file path
    default: ""

# vsphere plugin inputs

  vcenter_user:
    type: string

  vcenter_password:
    type: string

  vcenter_ip:
    type: string

  vcenter_port:
    type: string
    default: 443

  vcenter_datastore:
    type: string
    description: >
       vcenter datastore
    default: datastore1

  vcenter_datacenter:
    type: string
    description: >
       vcenter datacenter
    default: Datacenter

  vcenter_resource_pool:
    description: >
      Resource pool name
    default: Resources

  vsphere_auto_placement:
    type: string
    default: true

  vsphere_centos_name:
    type: string
    description: >
      "CentOS instance name"
    default: "sec_tag_test_vm"

  template_name:
    type: string
    description: >
      "CentOS 7 template name"
    default: "CentOS-7.2-x86_64-1511-tmpl"

  cpus:
    type: integer
    default: 1

  memory:
    type: integer
    description: RAM in MB
    default: 256

  vsphere_centos_agent_install_method:
    type: string
    description: >
      "Install agent on VMs or not, next methods are allowed: none, remote, init_script, provided"
    default: none

  vsphere_agent_user:
    type: string
    description: >
      "Cloudify agent username"
    default: "centos"

  vsphere_agent_key:
    type: string
    description: >
      "Path to ssh key used for connection to cloudify agent"
    default: ""

# Security tag definition
  name_of_tag:
    type: string
    description: Name of Security tag
    default: "RED"

  node_name_prefix:
    type: string
    description: >
       Node name prefix
    default: platform_test_

###############################################################################
#  DSL section
###############################################################################
dsl_definitions:
  nsx_auth: &nsx_auth
    username: { get_input: nsx_user }
    password: { get_input: nsx_password }
    host: { get_input: nsx_ip }
    raml: { get_input: nsx_raml }

  connection_config: &connection_config
    username: { get_input: vcenter_user }
    password: {get_input: vcenter_password }
    host: { get_input: vcenter_ip }
    port: { get_input: vcenter_port }
    datacenter_name: {get_input: vcenter_datacenter }
    resource_pool_name: { get_input: vcenter_resource_pool }
    auto_placement: { get_input: vsphere_auto_placement }

###############################################################################
# Node templates section
###############################################################################
node_templates:

###############################################################################
# vsphere section
###############################################################################
  vsphere_vm:
    type: cloudify.vsphere.nodes.Server
    properties:
      connection_config: *connection_config
      server:
        name: { concat: [ { get_input: node_name_prefix }, { get_input: vsphere_centos_name }, "-explicit" ] }
        template: { get_input: template_name }
        cpus: { get_input: cpus }
        memory: { get_input: memory }
      agent_config:
        install_method: none

  vsphere_vm_link:
    type: cloudify.vsphere.nodes.Server
    properties:
      connection_config: *connection_config
      server:
        name: { concat: [ { get_input: node_name_prefix }, { get_input: vsphere_centos_name }, "-implicit" ] }
        template: { get_input: template_name }
        cpus: { get_input: cpus }
        memory: { get_input: memory }
      agent_config:
        install_method: none
    # can be used only with 'attach_tag' relationship
    instances:
      deploy: 2
    relationships:
      - type: cloudify.nsx.relationships.attach_tag
        target: security_tag

###############################################################################
# NSX section
###############################################################################
  security_tag:
    type: cloudify.nsx.security_tag
    properties:
      nsx_auth: *nsx_auth
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            tag:
              name: { concat: [ { get_input: node_name_prefix }, { get_input: name_of_tag } ] }
              description: Example security tag which will be assigned to example VM

  set_tag_to_vm:
    type: cloudify.nsx.security_tag_vm
    relationships:
      - type: cloudify.relationships.contained_in
        target: security_tag
      - type: cloudify.relationships.connected_to
        target: vsphere_vm
    properties:
      nsx_auth: *nsx_auth
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            vm_tag:
              tag_id: { get_attribute: [ security_tag, resource_id ] }
              vm_id: { get_attribute: [vsphere_vm, vsphere_server_id] }
