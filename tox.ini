[tox]
envlist = py27,pep8,validate
minversion = 1.6
skipsdist = True

[testenv]
setenv =
        VIRTUAL_ENV={envdir}

# NOTE: relative paths were used due to '-w' flag for nosetests util

usedevelop = True
install_command = pip install -U {opts} {packages}
deps = -r{toxinidir}/dev-requirements.txt
       -r{toxinidir}/test-requirements.txt
whitelist_externals = bash

[testenv:pep8]
commands =
    flake8
    pylint -E cloudify_nsx tests

[testenv:validate]
commands =
    cfy blueprint validate tests/platformtests/resources/bind_policy_group.yaml
    cfy blueprint validate tests/platformtests/resources/security_tag_vm.yaml
    cfy blueprint validate tests/platformtests/resources/security_tag.yaml
    cfy blueprint validate tests/platformtests/resources/security_policy.yaml
    cfy blueprint validate tests/platformtests/resources/security_groups.yaml
    cfy blueprint validate tests/integration/resources/dlr_with_bgp_functionality.yaml
    cfy blueprint validate tests/integration/resources/esg_with_ospf_functionality.yaml
    cfy blueprint validate tests/integration/resources/esg_with_bgp_functionality.yaml
    cfy blueprint validate tests/integration/resources/dlr_functionality.yaml
    cfy blueprint validate tests/integration/resources/security_functionality_implicit.yaml
    cfy blueprint validate tests/integration/resources/security_functionality.yaml
    cfy blueprint validate tests/integration/resources/esg_functionality.yaml


[testenv:py27]
commands =
    nosetests --cover-html --with-coverage --cover-package=cloudify_nsx tests/unittests/ --with-xunit --xunit-file=nosetests.xml

[testenv:venv]
commands = {posargs}

[flake8]
show-source = True
ignore =
exclude=.venv,.tox,dist,*egg,etc,build,bin,lib,local,share
filename=*.py
