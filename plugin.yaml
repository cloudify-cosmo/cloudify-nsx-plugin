plugins:
  nsx:
    executor: central_deployment_agent
    source: https://github.com/cloudify-cosmo/cloudify-nsx-plugin/archive/master.zip
    package_name: cloudify-nsx-plugin
    package_version: '3.4a1'

data_types:

  vcenter_auth_type:
    properties:
      username:
        default: administrator@vsphere.local
        required: true
      password:
        default: vcenter
        required: true
      host:
        default: vcenter.local
        required: true

  nsx_auth_type:
    properties:
      username:
        default: administrator@vsphere.local
        required: true
      password:
        default: vcenter
        required: true
      host:
        default: vcenter.local
        required: true
      raml:
        default: ''
        description: >
          you can use updated version of NSX raml or url to
          https://raw.githubusercontent.com/vmware/pynsxv/master/pynsxv/library/api_spec/nsxvapi.raml
          Safest way to leave it empty and use NSX 6.2.3 as fully teasted
        required: false

node_types:

  # vcenter resource pool
  cloudify.vcenter.resource_pool:
    derived_from: cloudify.nodes.ObjectStorage
    properties:
      # reuse existed resource pool
      use_external_resource:
        default: true
        type: boolean
      # resource vcenter id
      resource_id:
        required: false
      vcenter_auth:
        type: vcenter_auth_type
      validate_resource_pool:
        default:
          # we need name in any case of usage except predefined 'id'
          name:
            required: true
            external_use: true
      resource_pool:
        default:
          # name of resource pool
          name: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.vcenter.resource_pool.create
        delete:
          implementation: nsx.cloudify_nsx.vcenter.resource_pool.delete

  # vcenter datastore
  cloudify.vcenter.datastore:
    derived_from: cloudify.nodes.ObjectStorage
    properties:
      # reuse existed resource pool
      use_external_resource:
        default: true
        type: boolean
      # resource vcenter id
      resource_id:
        required: false
      vcenter_auth:
        type: vcenter_auth_type
      validate_datastore:
        default:
          # we need name in any case of usage except predefined 'id'
          name:
            required: true
            external_use: true
      datastore:
        default:
          # name of datastore
          name: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.vcenter.datastore.create
        delete:
          implementation: nsx.cloudify_nsx.vcenter.datastore.delete

  # vcenter datacenter
  cloudify.vcenter.datacenter:
    derived_from: cloudify.nodes.Tier
    properties:
      # reuse existed resource pool
      use_external_resource:
        default: true
        type: boolean
      # resource vcenter id
      resource_id:
        required: false
      vcenter_auth:
        type: vcenter_auth_type
      validate_datacenter:
        default:
          # we need name in any case of usage except predefined 'id'
          name:
            required: true
            external_use: true
      datacenter:
        default:
          # name of datacenter
          name: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.vcenter.datacenter.create
        delete:
          implementation: nsx.cloudify_nsx.vcenter.datacenter.delete

  # vcenter distributed port group
  cloudify.vcenter.dvportgroup:
    derived_from: cloudify.nodes.Subnet
    properties:
      # Supported only True - search port group in vcenter by id/name
      use_external_resource:
        default: true
        type: boolean
      # resource vcenter id
      resource_id:
        required: false
      vcenter_auth:
        type: vcenter_auth_type
      validate_dvportgroup:
        default:
          # we need name in any case of usage except predefined 'id'
          name:
            required: true
      dvportgroup:
        default:
          # name distributed port group
          name: ""
      update_to:
        default:
          # rename distributed port group
          name: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.vcenter.dvportgroup.create
        delete:
          implementation: nsx.cloudify_nsx.vcenter.dvportgroup.delete

  # vcenter vm
  cloudify.vcenter.server:
    derived_from: cloudify.nodes.Compute
    properties:
      # Supported only True - search vm in vcenter by id/name
      use_external_resource:
        default: true
        type: boolean
      # resource vcenter id
      resource_id:
        required: false
      vcenter_auth:
        type: vcenter_auth_type
      validate_server:
        default:
          # we need name in any case of usage except predefined 'id'
          name:
            required: true
      # install agent needt only for correcxt support Nodes.Compute
      install_agent:
        default: false
      server:
        default:
          # name distributed port group
          name: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.vcenter.vm.create
        delete:
          implementation: nsx.cloudify_nsx.vcenter.vm.delete

  # SecuriteGroup
  cloudify.nsx.security_group:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_group:
        default:
          scopeId:
            default: globalroot-0
            required: true
          name:
            required: true
          member:
            set_none: true
          excludeMember:
            set_none: true
          dynamicMemberDefinition:
            set_none: true
      group:
        default:
          scopeId: globalroot-0
          name: ""
          member: {}
          excludeMember: {}
          dynamicMemberDefinition: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.security.group.create
        delete:
          implementation: nsx.cloudify_nsx.security.group.delete

  # SecuriteGroup Dynamic Member Update
  cloudify.nsx.security_group_dynamic_member:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_dynamic_member:
        default:
          security_group_id:
            required: true
          # dynamic member definition
          dynamic_set:
            required: true
      dynamic_member:
        default:
          dynamic_set: ""
          security_group_id: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.security.group_dynamic_member.create
        delete:
          implementation: nsx.cloudify_nsx.security.group_dynamic_member.delete

  # SecuriteGroup Member
  cloudify.nsx.security_group_member:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_group_member:
        default:
          security_group_id:
            required: true
          # member id
          objectId:
            required: true
      group_member:
        default:
          security_group_id: ""
          objectId: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.security.group_member.create
        delete:
          implementation: nsx.cloudify_nsx.security.group_member.delete

  # SecuriteGroup Exclude Member
  cloudify.nsx.security_group_exclude_member:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_group_exclude_member:
        default:
          security_group_id:
            required: true
          # member id
          objectId:
            required: true
      group_exclude_member:
        default:
          security_group_id: ""
          objectId: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.security.group_exclude_member.create
        delete:
          implementation: nsx.cloudify_nsx.security.group_exclude_member.delete

  # Security Group Policy
  cloudify.nsx.security_policy:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_policy:
        default:
          name:
            required: true
          description:
            set_none: true
          precedence:
            type: string
            required: true
          parent:
            set_none: true
          securityGroupBinding:
            set_none: true
          actionsByCategory:
            set_none: true
      policy:
        default:
          name: ""
          description: ""
          precedence: ""
          parent: ""
          securityGroupBinding: ""
          actionsByCategory: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.security.policy.create
        delete:
          implementation: nsx.cloudify_nsx.security.policy.delete

  # Security Group Policy bind
  cloudify.nsx.security_policy_group_bind:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_policy_group_bind:
        default:
          security_policy_id:
            required: true
          security_group_id:
            required: true
      policy_group_bind:
        default:
          security_policy_id: ""
          security_group_id: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.security.policy_group_bind.create
        delete:
          implementation: nsx.cloudify_nsx.security.policy_group_bind.delete

  # Security Group Policy bind
  cloudify.nsx.security_policy_section:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_policy_section:
        default:
          security_policy_id:
            required: true
          category:
            required: true
          action:
            required: true
      policy_section:
        default:
          security_policy_id: ""
          category: ""
          action: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.security.policy_section.create
        delete:
          implementation: nsx.cloudify_nsx.security.policy_section.delete

  # Security Tag
  cloudify.nsx.security_tag:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_tag:
        default:
          name:
            required: true
          description:
            set_none: true
      tag:
        default:
          name: ""
          description: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.security.tag.create
        delete:
          implementation: nsx.cloudify_nsx.security.tag.delete

  # Security Tag VM
  cloudify.nsx.security_tag_vm:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_vm_tag:
        default:
          tag_id:
            required: true
          vm_id:
            required: true
      vm_tag:
        default:
          tag_id: ""
          vm_id: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.security.tag_vm.create
        delete:
          implementation: nsx.cloudify_nsx.security.tag_vm.delete

  # logical switches
  cloudify.nsx.lswitch:
    derived_from: cloudify.nodes.Network
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_switch:
        default:
          # we need name in any case of usage except predefined 'id'
          name:
            required: true
            external_use: true
          transport_zone:
            required: true
            external_use: false
          mode:
            required: false
            external_use: false
            set_none: true
            values:
              - UNICAST_MODE
              - MULTYCAST_MODE
              - HYBRID_MODE
      switch:
        default:
          # The name of the Scope (Transport Zone)
          transport_zone: {}
          # The name that will be assigned to the new logical switch
          name: ""
          # (Optional) Control Plane Mode, uses the Transport Zone default if not specified
          mode: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.lswitch.create
        delete:
          implementation: nsx.cloudify_nsx.network.lswitch.delete

  # distributed logical routers
  cloudify.nsx.dlr:
    derived_from: cloudify.nodes.Router
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_router:
        default:
          name:
            required: true
          dlr_pwd:
            required: true
          dlr_size:
            required: true
          datacentermoid:
            required: true
          datastoremoid:
            required: true
          resourcepoolid:
            required: true
          ha_ls_id:
            required: true
          uplink_ls_id:
            required: true
          uplink_ip:
            required: true
          uplink_subnet:
            required: true
          uplink_dgw:
            required: true
      router:
        default:
          # The name that will be assigned to the new dlr
          name: ""
          # The admin password of new dlr
          dlr_pwd: ""
          # The DLR Control VM size
          dlr_size: ""
          # The vCenter DataCenter ID where dlr control vm will be deployed
          datacentermoid: ""
          # The vCenter datastore ID where dlr control vm will be deployed
          datastoremoid: ""
          # The vCenter Cluster where dlr control vm will be deployed
          resourcepoolid: ""
          # New dlr ha logical switch id or vds port group
          ha_ls_id: ""
          # New dlr uplink logical switch id or vds port group
          uplink_ls_id: ""
          # New dlr uplink ip@
          uplink_ip: ""
          # New dlr uplink subnet
          uplink_subnet: ""
          # New dlr default gateway
          uplink_dgw: ""
      validate_firewall:
        default:
          action:
            default: accept
          logging:
            default: false
            type: boolean
      firewall:
        default:
          # accept or deny
          action: accept
          # true or false
          logging: false
      validate_dhcp:
        default:
          enabled:
            default: true
            type: boolean
          syslog_enabled:
            default: false
            type: boolean
          syslog_level:
            default: INFO
            caseinsensitive: true
            values:
              - EMERGENCY
              - ALERT
              - CRITICAL
              - ERROR
              - WARNING
              - NOTICE
              - INFO
              - DEBUG
      dhcp:
        default:
          # True/False The desired state of the DHCP Server
          enabled: true
          # ('true'/'false') The desired logging state of the DHCP Server
          syslog_enabled: false
          # The logging level for DHCP on this Edge (INFO/WARNING/etc.)
          syslog_level: INFO
      validate_routing:
        default:
          enabled:
            default: true
            type: boolean
          staticRouting:
            set_none: true
            sub:
              defaultRoute:
                set_none: true
                sub:
                  gatewayAddress:
                    set_none: true
                  vnic:
                    set_none: true
                  mtu:
                    set_none: true
          routingGlobalConfig:
            sub:
              routerId:
                set_none: true
              ecmp:
                default: false
                type: boolean
              logging:
                sub:
                  logLevel:
                    default: INFO
                    caseinsensitive: true
                    values:
                      - EMERGENCY
                      - ALERT
                      - CRITICAL
                      - ERROR
                      - WARNING
                      - NOTICE
                      - INFO
                      - DEBUG
                enable:
                   default: false
                   type: boolean
      routing:
        default:
          enabled: true
          staticRouting:
            # Optional, if no default routes needs to be configured
            defaultRoute:
              gatewayAddress: ''
              # uplink nic
              vnic: ''
              # Optional. Valid value:smaller than the MTU set on the
              # interface. Default will be the MTU of the interface on
              # which this route is configured
              mtu: ''
          routingGlobalConfig:
            # Required when dynamic routing protocols like OSPF,
            # or BGP is configured
            routerId: ''
            # Optional. When absent, enable=false and logLevel=INFO
            logging:
              logLevel: INFO
              enable: false
            # Optional. Defaults to false.
            ecmp: false
      validate_ospf:
        default:
          enabled:
            default: false
            type: boolean
          defaultOriginate:
            default: false
            type: boolean
          gracefulRestart:
            default: false
            type: boolean
          redistribution:
            default: false
            type: boolean
          protocolAddress:
            set_none: true
          forwardingAddress:
            set_none: true
      # Only one of (OSPF/BGP) can be configured as the dynamic routing
      # protocol for Logical Router.
      ospf:
        default:
          # When not specified, it will be treated as false, When false,
          # it will delete the existing config
          enabled: false
          # default is false, user can configure edge router to publish
          # default route by setting it to true.
          defaultOriginate: false
          # default is false, user can enable graceful restart by
          # setting it to true. Its a newly added optional field.
          gracefulRestart: false
          # Optional. Defaults to false.
          redistribution: false
          # ipAddress on one of the uplink interfaces,
          # only for enabled and use logical switch as ospf
          protocolAddress: ""
          # ipAddress on the same subnet as the forwardingAddress,
          # only for enabled and use logical switch as ospf
          forwardingAddress: ""
      validate_bgp:
        default:
          enabled:
            default: false
            type: boolean
          defaultOriginate:
            default: false
            type: boolean
          gracefulRestart:
            default: false
            type: boolean
          redistribution:
            default: false
            type: boolean
          localAS:
            type: string
            set_none: true
      # Only one of (OSPF/BGP) can be configured as the dynamic routing
      # protocol for Logical Router.
      bgp:
        default:
          # When not specified, it will be treated as false, When false,
          # it will delete the existing config
          enabled: false
          # default is false, user can configure edge router to publish
          # default route by setting it to true.
          defaultOriginate: false
          # default is false, user can enable graceful restart by
          # setting it to true. Its a newly added optional field.
          gracefulRestart: false
          # Optional. Defaults to false.
          redistribution: false
          # Valid values are : 1-65534
          # For disabled it must be also some number
          localAS: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.dlr.create
        delete:
          implementation: nsx.cloudify_nsx.network.dlr.delete

  # distributed logical routers interface ospf areas, use only after all
  # interfaces creation!
  cloudify.nsx.ospf_areas:
    derived_from: cloudify.nodes.Port
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_area:
        default:
          dlr_id:
            required: true
          areaId:
            required: true
          type:
            required: true
            values:
              - normal
              - nssa
          authentication:
            set_none: true
            sub:
              type:
                required: true
                values:
                  - none
                  - password
                  - md5
              value:
                set_none: true
                required: false
      area:
        default:
          # dlr uuid
          dlr_id: ""
          # Mandatory and unique. Valid values are 0-4294967295
          areaId: ""
          # Optional. Default is normal. Valid inputs are normal, nssa
          type: normal
          # Optional. When not specified, its "none" authentication.
          authentication:
            # Valid values are none, password, md5
            type: password
            # value for authentication
            value: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.ospf_area.create
        delete:
          implementation: nsx.cloudify_nsx.network.ospf_area.delete

  # distributed logical routers interface ospf interfaces
  cloudify.nsx.ospf_interfaces:
    derived_from: cloudify.nodes.Port
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_interface:
        default:
          dlr_id:
            required: true
          areaId:
            required: true
          # must be vnic with uplink
          vnic:
            required: true
          helloInterval:
            default: 10
            type: string
          deadInterval:
            default: 40
            type: string
          priority:
            default: 128
            type: string
          cost:
            set_none: true
      interface:
        default:
          # dlr uuid
          dlr_id: ""
          # Mandatory and unique. Valid values are 0-4294967295
          areaId: ""
          # NIC id
          vnic: ""
          # Optional. Default 10 sec. Valid values are 1-255
          helloInterval: 10
          # Optional. Default 40 sec. Valid values are 1-65535
          deadInterval: 40
          # Optional. Default 128. Valid values are 0-255
          priority: 128
          # Optional. Auto based on interface speed. Valid values are 1-65535
          cost: 10
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.ospf_interface.create
        delete:
          implementation: nsx.cloudify_nsx.network.ospf_interface.delete

  # BGP Neighbour
  cloudify.nsx.dlrBGPNeighbour:
    derived_from: cloudify.nodes.Port
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_neighbour:
        default:
          dlr_id:
            required: true
          ipAddress:
            required: true
          remoteAS:
            required: true
          forwardingAddress:
            required: true
          protocolAddress:
            required: true
          weight:
            type: string
            default: 60
          holdDownTimer:
            type: string
            default: 180
          keepAliveTimer:
            type: string
            default: 60
          password:
            set_none: true
      neighbour:
        default:
          # dlr uuid
          dlr_id: ""
          # IPv4 only. IPv6 support not supported
          ipAddress: ""
          # Valid values are 0-65535
          remoteAS: ""
          # Optional. Default is 60. Valid values are 0-65535
          weight: 60
          # Optional. Default is 180 seconds. Valid values are : 2-65535.
          holdDownTimer: 180
          # Optional. Default is 60 seconds. Valid values are : 1-65534.
          keepAliveTimer: 60
          # Optional
          password: ""
          # ipAddress on one of the uplink interfaces,
          # only for enabled and use logical switch as ospf
          protocolAddress: ""
          # ipAddress on the same subnet as the forwardingAddress,
          # only for enabled and use logical switch as ospf
          forwardingAddress: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.dlr_bgp_neighbour.create
        delete:
          implementation: nsx.cloudify_nsx.network.dlr_bgp_neighbour.delete

  # BGP Neighbour Filter
  cloudify.nsx.esgBGPNeighbourFilter:
    derived_from: cloudify.nodes.Port
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_filter:
        default:
          neighbour_id:
            required: true
          action:
            required: true
            values:
              - permit
              - deny
          ipPrefixGe:
            type: string
            set_none: true
          ipPrefixLe:
            type: string
            set_none: true
          direction:
            required: true
            values:
              - in
              - out
          network:
            required: true
      filter:
        default:
          # neighbour rule
          neighbour_id: ""
          # Valid values are permit/deny
          action: ""
          # Optional. "Greater than or equal to" & used for filtering
          # based on prefix length. Valid IPv4 prefixes
          ipPrefixGe: ""
          # Optional. "Less than or equal to" & used for filtering
          # based on prefix length. Valid IPv4 prefixes
          ipPrefixLe: ""
          # Valid values are in/out
          direction: ""
          # Valid values are CIDR networks. IPv4 only.
          # IPv6 support not supported
          network: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.bgp_neighbour_filter.create
        delete:
          implementation: nsx.cloudify_nsx.network.bgp_neighbour_filter.delete

  # distributed logical routers interface routing ip prefixes
  # Optional. Required only if user wants to define redistribution
  # rules in dynamic routing protocols like ospf, bgp
  cloudify.nsx.dlr_routing_ip_prefix:
    derived_from: cloudify.nodes.Port
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_prefix:
        default:
          dlr_id:
            required: true
          name:
            required: true
          ipAddress:
            required: true
      prefix:
        default:
          dlr_id: ""
          # All the defined ipPrefix must have unique names
          name: ""
          # ip address like 10.112.196.160/24
          ipAddress: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.routing_ip_prefix.create
        delete:
          implementation: nsx.cloudify_nsx.network.routing_ip_prefix.delete

  # distributed logical routers interface ospf redistribution rule
  cloudify.nsx.routing_redistribution_rule:
    derived_from: cloudify.nodes.Port
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_rule:
        default:
          dlr_id:
            required: true
          type:
            required: true
            values:
              - bgp
              - ospf
          prefixName:
            default: any
          from:
            set_none: true
            sub:
              isis:
                default: false
                type: boolean
              ospf:
                default: false
                type: boolean
              bgp:
                default: false
                type: boolean
              static:
                default: false
                type: boolean
              connected:
                default: false
                type: boolean
          action:
            required: true
            values:
              - deny
              - permit
      rule:
        default:
          # dlr uuid
          dlr_id: ""
          # resdistribute section ospf/bgp
          type: ""
          # Optional. Default is "any". prefixName used here should be
          # defined in the routingGlobalConfig->ipPrefixes
          prefixName: any
          from:
            # Optional. Defaults to false
            isis: false
            # Optional. Defaults to false
            ospf: false
            # Optional. Defaults to false
            bgp: false
            # Optional. Defaults to false
            static: false
            # Optional. Defaults to false
            connected: false
          # Mandatory. Valid values are deny|permit
          action: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.routing_redistribution.create
        delete:
          implementation: nsx.cloudify_nsx.network.routing_redistribution.delete

  # distributed logical routers interface
  cloudify.nsx.dlr_interface:
    derived_from: cloudify.nodes.Port
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_interface:
        default:
          dlr_id:
            required: true
          interface_ls_id:
            required: true
          interface_ip:
            required: true
          interface_subnet:
            required: true
          name:
            default: ""
          vnic:
            type: string
            set_none: true
      interface:
        default:
          # dlr uuid
          dlr_id: {}
          # new interface logical switch
          interface_ls_id: {}
          # new interface ip address
          interface_ip: {}
          # new interface subnet
          interface_subnet: {}
          # name for interface
          name: ""
          # vnic for interface
          vnic: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.dlr_interface.create
        delete:
          implementation: nsx.cloudify_nsx.network.dlr_interface.delete

  # distributed router dhcp relay, we need separate type because we can
  # change it only after set all settings for interfaces
  cloudify.nsx.dlr_dhcp_relay:
    derived_from: cloudify.nodes.Port
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_relay:
        default:
          dlr_id:
            required: true
          relayServer:
            default: {}
          relayAgents:
            default: {}
      relay:
        default:
          # dlr uuid
          dlr_id: {}
          # relay settings
          relayServer: {}
          relayAgents: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.relay.create
        delete:
          implementation: nsx.cloudify_nsx.network.relay.delete

  # distributed logical routers gateway
  cloudify.nsx.dlr_dgw:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_gateway:
        default:
          dlr_id:
            required: true
          address:
            required: true
      gateway:
        default:
          dlr_id: ""
          # default gateway ip address
          address: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.dlr_dgw.create
        delete:
          implementation: nsx.cloudify_nsx.network.dlr_dgw.delete

  # edge services gateways
  cloudify.nsx.esg:
    derived_from: cloudify.nodes.Router
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_edge:
        default:
          # we need name in any case of usage except predefined 'id'
          name:
            required: true
            external_use: false
          esg_pwd:
            required: true
            external_use: false
          esg_size:
            default: compact
            values:
              - compact
              - large
              - quadlarge
              - xlarge
          datacentermoid:
            required: true
            external_use: false
          datastoremoid:
            required: true
            external_use: false
          resourcepoolid:
            required: true
            external_use: false
          default_pg:
            required: true
            external_use: false
          esg_username:
           default: admin
          esg_remote_access:
           default: false
           type: boolean
      edge:
        default:
          # The name of the ESG to be created
          name: ""
          # The CLI password of the ESG
          esg_pwd: {}
          # The size of the ESG, options are compact, large, quadlarge, xlarge
          esg_size: compact
          # The managed object id of the vCenter DC Object to deploy the ESG in
          datacentermoid: {}
          # The managed object id of the vCenter Datastore Object to deploy the ESG in
          datastoremoid: {}
          # The managed object id of the vCenter Cluster or RP Object to deploy the ESG in
          resourcepoolid: {}
          # The managed object id of the port group for the first vnic (on creation
          # the first vnic must be connected to a valid portgroup in NSX)
          default_pg: {}
          # The Username for the CLI and SSH access (default: admin)
          esg_username: admin
          # Enables / Disables SSH access to the Edge Host (default: False)
          esg_remote_access: false
      validate_firewall:
        default:
          action:
            default: accept
          logging:
            default: false
            type: boolean
      firewall:
        default:
          # accept or deny
          action: accept
          # true or false
          logging: false
      validate_dhcp:
        default:
          enabled:
            default: true
            type: boolean
          syslog_enabled:
            default: false
            type: boolean
          syslog_level:
            default: INFO
            values:
              - EMERGENCY
              - ALERT
              - CRITICAL
              - ERROR
              - WARNING
              - NOTICE
              - INFO
              - DEBUG
      dhcp:
        default:
          # True/False The desired state of the DHCP Server
          enabled: true
          # ('true'/'false') The desired logging state of the DHCP Server
          syslog_enabled: false
          # The logging level for DHCP on this Edge (INFO/WARNING/etc.)
          syslog_level: INFO
      validate_nat:
        default:
          enabled:
            default: true
            type: boolean
      nat:
        default:
          # The display name of a Edge Service Gateway used for NAT
          enabled: true
      validate_routing:
        default:
          enabled:
            default: true
            type: boolean
          staticRouting:
            set_none: true
            sub:
              defaultRoute:
                set_none: true
                sub:
                  gatewayAddress:
                    set_none: true
                  vnic:
                    set_none: true
                  mtu:
                    set_none: true
          routingGlobalConfig:
            sub:
              routerId:
                set_none: true
              ecmp:
                default: false
                type: boolean
              logging:
                sub:
                 logLevel:
                    default: INFO
                    caseinsensitive: true
                    values:
                      - EMERGENCY
                      - ALERT
                      - CRITICAL
                      - ERROR
                      - WARNING
                      - NOTICE
                      - INFO
                      - DEBUG
                enable:
                   default: false
                   type: boolean
      routing:
        default:
          enabled: true
          staticRouting:
            # Optional, if no default routes needs to be configured
            defaultRoute:
              gatewayAddress: ''
              # uplink nic
              vnic: ''
              # Optional. Valid value:smaller than the MTU set on the
              # interface. Default will be the MTU of the interface on
              # which this route is configured
              mtu: ''
          routingGlobalConfig:
            # Required when dynamic routing protocols like OSPF,
            # or BGP is configured
            routerId: ''
            # Optional. When absent, enable=false and logLevel=INFO
            logging:
              logLevel: INFO
              enable: false
            # Optional. Defaults to false.
            ecmp: false
      validate_ospf:
        default:
          enabled:
            default: false
            type: boolean
          defaultOriginate:
            default: false
            type: boolean
          gracefulRestart:
            default: false
            type: boolean
          redistribution:
            default: false
            type: boolean
      ospf:
        default:
          # When not specified, it will be treated as false, When false,
          # it will delete the existing config
          enabled: false
          # default is false, user can configure edge router to publish
          # default route by setting it to true.
          defaultOriginate: false
          # default is false, user can enable graceful restart by
          # setting it to true. Its a newly added optional field.
          gracefulRestart: false
          # Optional. Defaults to false.
          redistribution: false
          # ForwardingAddress and protocolAddress are not usable for edge
      validate_bgp:
        default:
          enabled:
            default: false
            type: boolean
          defaultOriginate:
            default: false
            type: boolean
          gracefulRestart:
            default: false
            type: boolean
          redistribution:
            default: false
            type: boolean
          localAS:
            type: string
            set_none: true
      # Only one of (OSPF/BGP) can be configured as the dynamic routing
      # protocol for Logical Router.
      bgp:
        default:
          # When not specified, it will be treated as false, When false,
          # it will delete the existing config
          enabled: false
          # default is false, user can configure edge router to publish
          # default route by setting it to true.
          defaultOriginate: false
          # default is false, user can enable graceful restart by
          # setting it to true. Its a newly added optional field.
          gracefulRestart: false
          # Optional. Defaults to false.
          redistribution: false
          # Valid values are : 1-65534
          # For disabled it must be also some number
          localAS: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.esg.create
        delete:
          implementation: nsx.cloudify_nsx.network.esg.delete

  # BGP Neighbour
  cloudify.nsx.esgBGPNeighbour:
    derived_from: cloudify.nodes.Port
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_neighbour:
        default:
          dlr_id:
            required: true
          ipAddress:
            required: true
          remoteAS:
            required: true
          weight:
            type: string
            default: 60
          holdDownTimer:
            type: string
            default: 180
          keepAliveTimer:
            type: string
            default: 60
          password:
            set_none: true
      neighbour:
        default:
          # dlr uuid
          dlr_id: ""
          # IPv4 only. IPv6 support not supported
          ipAddress: ""
          # Valid values are 0-65535
          remoteAS: ""
          # Optional. Default is 60. Valid values are 0-65535
          weight: 60
          # Optional. Default is 180 seconds. Valid values are : 2-65535.
          holdDownTimer: 180
          # Optional. Default is 60 seconds. Valid values are : 1-65534.
          keepAliveTimer: 60
          # Optional
          password: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.dlr_bgp_neighbour.create
        delete:
          implementation: nsx.cloudify_nsx.network.dlr_bgp_neighbour.delete

  # edge services gateways interfaces
  cloudify.nsx.esg_nat:
    derived_from: cloudify.nodes.VirtualIP
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_rule:
        default:
          esg_id:
            required: true
          action:
            required: true
          originalAddress:
            required: true
          translatedAddress:
            required: true
          vnic:
            set_none: true
          ruleTag:
            set_none: true
          loggingEnabled:
            default: false
            type: boolean
          enabled:
            default: true
            type: boolean
          description:
            set_none: true
          protocol:
            default: any
          translatedPort:
            default: any
          originalPort:
            default: any
      rule:
        default:
          # id of esg
          esg_id: ""
          # dnat/snat
          action: ""
          # originalAddress
          originalAddress: ""
          # translatedAddress
          translatedAddress: ""
          # Optional. vnic
          vnic: ""
          # Optional. Can be used to specify user-controlled ids on VSE.
          # Valid inputs 65537-131072. If not specified, vShield manager
          # will generate ruleId
          ruleTag: ""
          # Optional. Default is false
          loggingEnabled: false
          # Optional. Default is true
          enabled: true
          # Optional
          description: ""
          # Optional. Default is "any". This tag is not supported for SNAT rule
          protocol: any
          # Optional. Default is "any". This tag is not supported for SNAT rule
          translatedPort: any
          # Optional. Default is "any". This tag is not supported for SNAT rule
          originalPort: any
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.esg_nat.create
        delete:
          implementation: nsx.cloudify_nsx.network.esg_nat.delete

  # edge services gateways firewall
  cloudify.nsx.esg_firewall:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_rule:
        default:
          esg_id:
            required: true
          ruleTag:
            set_none: true
          name:
            set_none: true
          source:
            set_none: true
          destination:
            set_none: true
          application:
            set_none: true
          matchTranslated:
            default: false
            type: boolean
          direction:
            values:
              - in
              - out
            set_none: true
          action:
            required: true
            values:
              - accept
              - deny
              - reject
          enabled:
            default: true
            type: boolean
          loggingEnabled:
            default: false
            type: boolean
          description:
            set_none: true
      rule:
        default:
          # id of esg
          esg_id: ""
          # Optional. This can be used to specify user controlled ids
          # on VSE. The inputs here should be 1-65536. If not specified,
          # VSM will generate ruleId
          ruleTag: ""
          # Optional
          name: ""
          # Optional. Default behaviour is like "any". ipsetId or
          # predefined-vnicGroupIds can be used
          source: {}
          # Optional. Default behaviour is like "any". ipsetId or
          # predefined-vnicGroupIds can be used
          destination: {}
          # Optional. Default behaviour is like "any". applicationsetId
          # or applicationgroupId can be used
          application: {}
          # Optional. Default behaviour is like "false"
          matchTranslated: false
          # Optional. Default behaviour is like "any". Possible values
          # are in|out
          direction: any
          # Mandatory. Possible values are accept|deny|reject
          action: accept
          # Optional. Defaults to true
          enabled: true
          # Optional. Defaults to false
          loggingEnabled: true
          # Optional
          description: ""
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.esg_firewall.create
        delete:
          implementation: nsx.cloudify_nsx.network.esg_firewall.delete

  # edge services gateways interfaces
  cloudify.nsx.esg_interface:
    derived_from: cloudify.nodes.Port
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_interface:
        default:
          esg_id:
            required: true
          ifindex:
            required: true
            type: string
          ipaddr:
            set_none: true
          netmask:
            set_none: true
          prefixlen:
            set_none: true
          name:
            set_none: true
          mtu:
            set_none: true
          is_connected:
            set_none: true
          portgroup_id:
            set_none: true
          vnic_type:
            set_none: true
            values:
              - uplink
              - internal
          enable_send_redirects:
            set_none: true
          enable_proxy_arp:
            set_none: true
          secondary_ips:
            set_none: true
      interface:
        default:
          # The id of the ESG to configure interfaces on
          esg_id: ''
          # The vnic index, e.g. vnic3 and the index 3
          ifindex: ''
          # (Optional) The primary IP Address to be configured for this interface
          ipaddr: ''
          # (Optional) The netmask in the x.x.x.x format
          netmask: ''
          # (Optional) The prefix length, this takes precedence over the netmask
          prefixlen: ''
          # (Optional) The name assigned to the vnic
          name: ''
          # (Optional) The vnic MTU
          mtu: ''
          # (Optional) The vnic connection state (true/false)
          is_connected: ''
          # (Optional) The portgroup id of logical switch id to connenct this vnic to
          portgroup_id: ''
          # (Optional) The vnic type (uplink/internal)
          vnic_type: ''
          # (Optional) Whether the interface will send icmp redirects (true/false)
          enable_send_redirects: ''
          # (Optional) Whether the interface will do proxy arp (true/false)
          enable_proxy_arp: ''
          # (Optional) A list of additional secondary IP addresses in the primary IP's Subnet
          secondary_ips: ''
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.esg_interface.create
        delete:
          implementation: nsx.cloudify_nsx.network.esg_interface.delete

  # edge services gateways interfaces
  cloudify.nsx.esg_gateway:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_gateway:
        default:
          esg_id:
            required: true
          dgw_ip:
            required: true
          vnic:
            set_none: true
            type: string
          mtu:
            set_none: true
            type: string
          admin_distance:
            set_none: true
            type: string
      gateway:
        default:
          # The id of the ESG to configure interfaces on
          esg_id: ''
          # The default gateway ip (next hop)
          dgw_ip: ''
          # (Optional) The vnic index of were the default gateway is reachable on
          vnic: ''
          # (Optional) The MTU of the defautl gateway (default=1500)
          mtu: ''
          # (Optional) Admin distance of the defautl route (default=1)
          admin_distance: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.esg_gateway.create
        delete:
          implementation: nsx.cloudify_nsx.network.esg_gateway.delete

  # edge services gateways route
  cloudify.nsx.esg_route:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_route:
        default:
          esg_id:
            required: true
          network:
            required: true
          next_hop:
            set_none: true
          vnic:
            set_none: true
            type: string
          mtu:
            set_none: true
            type: string
          admin_distance:
            set_none: true
            type: string
          description:
            set_none: true
      route:
        default:
          # The id of the ESG to configure interfaces on
          esg_id: ''
          # The routes network in the x.x.x.x/yy format, e.g. 192.168.1.0/24
          network: ''
          # The next hop ip
          next_hop: ''
          # (Optional) The vnic index of were this route is reachable on
          vnic: ''
          # (Optional) The MTU of the route (default=1500)
          mtu: ''
          # (Optional) Admin distance of the defautl route (default=1)
          admin_distance: 1
          # (Optional) A description for this route
          description: ''
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.esg_route.create
        delete:
          implementation: nsx.cloudify_nsx.network.esg_route.delete

  # Edge DHCP pool
  cloudify.nsx.dhcp_pool:
    derived_from: cloudify.nodes.ApplicationServer
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_pool:
        default:
          esg_id:
            required: true
          ip_range:
            required: true
          default_gateway:
            set_none: true
          subnet_mask:
            set_none: true
          domain_name:
            set_none: true
          dns_server_1:
            set_none: true
          dns_server_2:
            set_none: true
          lease_time:
            set_none: true
          auto_dns:
            set_none: true
      pool:
        default:
          # The id of the ESG to configure interfaces on
          esg_id: ''
          # An IP range, e.g. 192.168.178.10-192.168.178.100 for this IP Pool
          ip_range: {}
          # (Optional) The default gateway for the specified subnet
          default_gateway: {}
          # (Optional) The subnet mask (e.g. 255.255.255.0) for the specified subnet
          subnet_mask: {}
          # (Optional) The DNS domain name (e.g. vmware.com) for the specified subnet
          domain_name: ""
          # (Optional) The primary DNS Server
          dns_server_1: {}
          # (Optional) The secondary DNS Server
          dns_server_2: {}
          # (Optional) The lease time in seconds, use 'infinite' to disable expiry of DHCP leases
          lease_time: infinite
          # ('true'/'false') If set to true, the DNS servers and domain name set for NSX-Manager will be used
          auto_dns: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.dhcp_pool.create
        delete:
          implementation: nsx.cloudify_nsx.network.dhcp_pool.delete

  # Edge DHCP binding
  cloudify.nsx.dhcp_binding:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      validate_bind:
        default:
          esg_id:
            required: true
          vm_id:
            set_none: true
          vnic_id:
            set_none: true
            type: string
          mac:
            set_none: true
          hostname:
            required: true
          ip:
            required: true
          default_gateway:
            set_none: true
          subnet_mask:
            set_none: true
          domain_name:
            set_none: true
          dns_server_1:
            set_none: true
          dns_server_2:
            set_none: true
          lease_time:
            set_none: true
          auto_dns:
            set_none: true
      bind:
        default:
          # The id of the ESG to configure interfaces on
          esg_id: ''
          # (Optional, case vm_id/vnic_id) The VM managed object Id in vCenter for the VM to be attached to this binding entry
          vm_id: {}
          # (Optional, case vm_id/vnic_id) The vnic index for the VM interface attached to this binding entry (e.g. vnic0 has index 0)
          vnic_id: {}
          # (Optional, case without vm_id/vnic_id) The MAC Address of the static binding
          mac: {}
          # The hostname for this static binding
          hostname: ""
          # The IP Address for this static binding
          ip: {}
          # (Optional) The default gateway for the specified binding
          default_gateway: {}
          # (Optional) The subnet mask (e.g. 255.255.255.0) for the specified binding
          subnet_mask: {}
          # (Optional) The DNS domain name (e.g. vmware.com) for the specified binding
          domain_name: ""
          # (Optional) The primary DNS Server
          dns_server_1: {}
          # (Optional) The secondary DNS Server
          dns_server_2: {}
          # (Optional) The lease time in seconds, use 'infinite' to disable expiry of DHCP leases
          lease_time: infinite
          # ('true'/'false') If set to true, the DNS servers and domain name set for NSX-Manager will be used
          auto_dns: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.network.dhcp_bind.create
        delete:
          implementation: nsx.cloudify_nsx.network.dhcp_bind.delete

  # distributed firewall
  cloudify.nsx.dfw_section:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      nsx_auth:
        type: nsx_auth_type
      # reuse id/name
      use_external_resource:
        default: false
        type: boolean
      # resource nsx id
      resource_id:
        required: false
      section:
        default:
          # The name of the dfw section to be created
          name: ""
          # The type of the section. Allowed values are L2/L3/L3R
          type: L3R
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.cfy_stub.create
        delete:
          implementation: nsx.cloudify_nsx.cfy_stub.delete

  # distributed firewall
  cloudify.nsx.dfw_rule:
    derived_from: cloudify.nodes.SecurityGroup
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.cfy_stub.create
        delete:
          implementation: nsx.cloudify_nsx.cfy_stub.delete

  # Load Balancer Application profile to an ESG
  cloudify.nsx.lb_app_profile:
    derived_from: cloudify.nodes.LoadBalancer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.cfy_stub.create
        delete:
          implementation: nsx.cloudify_nsx.cfy_stub.delete

  # Member inside a Server Pool on an ESG
  cloudify.nsx.lb_member:
    derived_from: cloudify.nodes.LoadBalancer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.cfy_stub.create
        delete:
          implementation: nsx.cloudify_nsx.cfy_stub.delete

  # Load Balancing Monitor on an ESG
  cloudify.nsx.lb_monitor:
    derived_from: cloudify.nodes.LoadBalancer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.cfy_stub.create
        delete:
          implementation: nsx.cloudify_nsx.cfy_stub.delete

  # a Load Balancing Server Pool on an ESG
  cloudify.nsx.lb_pool:
    derived_from: cloudify.nodes.LoadBalancer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.cfy_stub.create
        delete:
          implementation: nsx.cloudify_nsx.cfy_stub.delete

  # a Load Balancing Virtual IP / Virtual Server (VIP) on an ESG
  cloudify.nsx.lb_vip:
    derived_from: cloudify.nodes.LoadBalancer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.cfy_stub.create
        delete:
          implementation: nsx.cloudify_nsx.cfy_stub.delete
