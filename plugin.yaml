plugins:
  nsx:
    executor: central_deployment_agent
    # source: https://github.com/Cloudify-PS/cloudify-nsx-plugin/archive/master.zip
    package_name: cloudify-nsx-plugin
    package_version: '0.1'

node_types:

  # vcenter resource pool
  cloudify.vcenter.resource_pool:
    derived_from: cloudify.nodes.Root
    properties:
      vcenter_auth:
        default: {}
      resource_pool:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.vcenter_resource_pool.create
        delete:
          implementation: nsx.cloudify_nsx.vcenter_resource_pool.delete

  # vcenter datastore
  cloudify.vcenter.datastore:
    derived_from: cloudify.nodes.Root
    properties:
      vcenter_auth:
        default: {}
      datastore:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.vcenter_datastore.create
        delete:
          implementation: nsx.cloudify_nsx.vcenter_datastore.delete

  # vcenter datacenter
  cloudify.vcenter.datacenter:
    derived_from: cloudify.nodes.Root
    properties:
      vcenter_auth:
        default: {}
      datacenter:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.vcenter_datacenter.create
        delete:
          implementation: nsx.cloudify_nsx.vcenter_datacenter.delete

  # logical switches
  cloudify.nsx.lswitch:
    derived_from: cloudify.nodes.Root
    properties:
      nsx_auth:
        default: {}
      switch:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.nsx_lswitch.create
        delete:
          implementation: nsx.cloudify_nsx.nsx_lswitch.delete

  # distributed logical routers
  cloudify.nsx.dlr:
    derived_from: cloudify.nodes.Root
    properties:
      nsx_auth:
        default: {}
      router:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.nsx_dlr.create
        delete:
          implementation: nsx.cloudify_nsx.nsx_dlr.delete

  # distributed logical routers interface
  cloudify.nsx.dlr_interface:
    derived_from: cloudify.nodes.Root
    properties:
      nsx_auth:
        default: {}
      interface:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.nsx_dlr_interface.create
        delete:
          implementation: nsx.cloudify_nsx.nsx_dlr_interface.delete

  # distributed logical routers gateway
  cloudify.nsx.dlr_dgw:
    derived_from: cloudify.nodes.Root
    properties:
      nsx_auth:
        default: {}
      gateway:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.nsx_dlr_dgw.create
        delete:
          implementation: nsx.cloudify_nsx.nsx_dlr_dgw.delete

  # edge services gateways
  cloudify.nsx.esg:
    derived_from: cloudify.nodes.Root

    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.stub.create
          inputs: {}
        configure:
          implementation: nsx.cloudify_nsx.stub.configure
          inputs: {}
        start:
          implementation: nsx.cloudify_nsx.stub.start
          inputs: {}
        stop:
          implementation: nsx.cloudify_nsx.stub.stop
          inputs: {}
        delete:
          implementation: nsx.cloudify_nsx.stub.delete
          inputs: {}

  # Edge DHCP
  cloudify.nsx.dhcp:
    derived_from: cloudify.nodes.Root

    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.stub.create
          inputs: {}
        configure:
          implementation: nsx.cloudify_nsx.stub.configure
          inputs: {}
        start:
          implementation: nsx.cloudify_nsx.stub.start
          inputs: {}
        stop:
          implementation: nsx.cloudify_nsx.stub.stop
          inputs: {}
        delete:
          implementation: nsx.cloudify_nsx.stub.delete
          inputs: {}

  # distributed firewall
  cloudify.nsx.dfw:
    derived_from: cloudify.nodes.Root

    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: nsx.cloudify_nsx.stub.create
          inputs: {}
        configure:
          implementation: nsx.cloudify_nsx.stub.configure
          inputs: {}
        start:
          implementation: nsx.cloudify_nsx.stub.start
          inputs: {}
        stop:
          implementation: nsx.cloudify_nsx.stub.stop
          inputs: {}
        delete:
          implementation: nsx.cloudify_nsx.stub.delete
          inputs: {}
